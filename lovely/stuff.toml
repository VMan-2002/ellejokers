[manifest]
version = "0.1.0"
dump_lua = true
priority = 0

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''local card = Card(0,0, 0.5*G.CARD_W, 0.5*G.CARD_H, G.P_CARDS[v[1]], G.P_CENTERS.c_base)'''
position = "at"
payload = '''local card = Card(0,0, 0.5*G.CARD_W, 0.5*G.CARD_H, G.P_CARDS[v[1]], G.P_CENTERS[v[3] or 'c_base'])'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = 'for _, v in ipairs(info_queue) do'
position = "before"
payload = '''
-- ellejokers. stuff :p
if (card) then
	-- Spearlamp support
	if (#SMODS.find_card("j_elle_spearlamp", false)>0) then
		if (_c.key == "m_steel") then info_queue[#info_queue+1] = G.P_CENTERS.m_elle_slime end
		if (_c.key == "m_elle_slime") then info_queue[#info_queue+1] = G.P_CENTERS.m_steel end
	end

	-- Upgrade support
	if (_c.elle_upgrade) then
		local t = G.P_CENTERS[_c.elle_upgrade.card]
		local j = copy_table(G.P_CENTERS[_c.elle_upgrade.card].config)
		local u = _c.elle_upgrade.values and _c.elle_upgrade:values(card) or {}
		
		--print(tprint(t))
		
		-- Upgrade variable stuff
		--print(tprint(j))
		for i,v in pairs(u) do
			j.extra[i] = v
		end
		j.set = "Other"
		j.name = "j_elle_fallen"
		--print(tprint(j))
		
		local test = {set="Other", specific_vars=j, vars=j}
		for k,v in pairs(t) do
			test[k] = v
		end
		
		info_queue[#info_queue+1] = t
		info_queue[#info_queue+1] = test
		info_queue[#info_queue+1] = {key = "j_elle_fallen", set = "Other", config = j, vars = j}
		
		--print(tprint(t))
		--print(tprint(test))
	end
end
'''
match_indent = true